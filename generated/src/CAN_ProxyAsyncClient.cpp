
// AUTO GENERATED by vnxcppcodegen

#include <vnx/vnx.h>
#include <pilot/base/package.hxx>
#include <pilot/base/CAN_ProxyAsyncClient.hxx>
#include <pilot/base/CAN_Frame.hxx>
#include <vnx/Module.h>
#include <vnx/TopicPtr.hpp>



namespace pilot {
namespace base {

CAN_ProxyAsyncClient::CAN_ProxyAsyncClient(const std::string& service_name)
	:	AsyncClient::AsyncClient(vnx::Hash64(service_name))
{
}

CAN_ProxyAsyncClient::CAN_ProxyAsyncClient(vnx::Hash64 service_addr)
	:	AsyncClient::AsyncClient(service_addr)
{
}

std::vector<uint64_t> CAN_ProxyAsyncClient::vnx_get_pending_ids() const {
	std::vector<uint64_t> _list;
	return _list;
}

void CAN_ProxyAsyncClient::vnx_purge_request(uint64_t _request_id) {
}

void CAN_ProxyAsyncClient::vnx_callback_switch(uint64_t _request_id, std::shared_ptr<const vnx::Value> _value) {
	{
		throw std::runtime_error("CAN_ProxyAsyncClient: unknown return type");
	}
}


} // namespace pilot
} // namespace base
